cows = {'Miss Bella': 25, 'Horns': 25, 'Lotus': 40, 'MooMoo': 50, 'Boo': 20, 'Milkshake': 40}
limit = 100

def brute_force_cow_transport(cows,limit=10):
    """
    Finds the allocation of cows that minimizes the number of spaceship trips
    via brute force.  The brute force algorithm should follow the following method:

    1. Enumerate all possible ways that the cows can be divided into separate trips
    2. Select the allocation that minimizes the number of trips without making any trip
        that does not obey the weight limitation
            
    Does not mutate the given dictionary of cows.

    Parameters:
    cows - a dictionary of name (string), weight (int) pairs
    limit - weight limit of the spaceship (an int)
    
    Returns:
    A list of lists, with each inner list containing the names of cows
    transported on a particular trip and the overall list containing all the
    trips
    """
    # TODO: Your code here
    cows_copy = cows.copy()
    cows_copy = {'Herman': 7, 'Betsy': 9, 'Moo Moo': 3}
    cows_copy = {'Betsy': 65, 'Buttercup': 72, 'Daisy': 50}
    cows_list = []
    for i,j in cows_copy.items():
        cows_list.append(i)
    cows_partitions = get_partitions(cows_list)
    def brute_force_recursive(cows, limit, cows_partitions):
        trip = []
        overall_trip = []
        weight_avail = limit
        next_cows = cows_partitions.__next__()
        print(next_cows)
        for cowList in next_cows:
            for i in cowList:
                print(i,weight_avail)
                if cows[i] > weight_avail:
                    return brute_force_recursive(cows_copy,limit,\
                                                 cows_partitions)
                elif cows[i] <= weight_avail:
                    weight_avail -= cows[i]
                    trip.append(i)
                    print(trip,weight_avail)
                else:
                    pass
            overall_trip.append(trip)
            weight_avail = limit
            trip = []
            print(overall_trip,weight_avail)
        return overall_trip
    return brute_force_recursive(cows_copy, limit, cows_partitions)
# End of code    
print('Output from Brute:',brute_force_cow_transport(cows, limit))
